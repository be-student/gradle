/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.8.2")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:31.0.1-jre")
}

application {
    // Define the main class for the application.
    mainClass.set("gradle.App")
}
//tasks.register("hello"){
//    doFirst{
//        println("doFirst")
//    }
//    println("do Middle")
//    doLast {
//        println("doLast")
//    }
//}
println("This is executed during the configuration phase.")

tasks.register("configured") {
    println("This is also executed during the configuration phase, because :configured is used in the build.")
}

tasks.register("test1") {
    doLast {
        println("This is executed during the execution phase.")
    }
}

tasks.register("testBoth") {
    doFirst {
        println("This is executed first during the execution phase.")
    }
    doLast {
        println("This is executed last during the execution phase.")
    }
    println("This is executed during the configuration phase as well, because :testBoth is used in the build.")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

//tasks.register("repeat1"){
//    dependsOn("repeat2")
//    doLast{
//        repeat(4) {print("repeat1 $it ")}
//    }
//}
//
//tasks.register("repeat2"){
//    doLast{
//        repeat(4) {print("repeat2 $it ")}
//    }
//}

//repeat(4){counter->
//    tasks.register("repeat$counter"){
//        doLast{
//            repeat(4) {print("repeat$counter $it ")}
//        }
//    }
//}

//repeat(4) { counter ->
//    tasks.register("task$counter") {
//        doLast {
//            println("I'm task number $counter")
//        }
//    }
//}
//tasks.named("task0") { dependsOn("task2", "task3") }


tasks.register("hello") {
    doLast {
        println("Hello Earth")
    }
}
tasks.named("hello") {
    doFirst {
        println("Hello Venus")
    }
}
tasks.named("hello") {
    doLast {
        println("Hello Mars")
    }
}
tasks.named("hello") {
    doLast {
        println("Hello Jupiter")
    }
}

defaultTasks("clean1", "run1")

tasks.register("clean1") {
    doLast {
        println("Default Cleaning!")
    }
}

tasks.register("run1") {
    doLast {
        println("Default Running!")
    }
}

tasks.register("other") {
    doLast {
        println("I'm not a default task!")
    }
}

println(name)
println(path)

tasks.test{
    dependsOn("hello")
}

tasks.build{
    dependsOn("hello")
}